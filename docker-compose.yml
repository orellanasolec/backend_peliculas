# docker-compose.yml modificado para PostgreSQL

services:
  # ------------------------------------------------------------------
  # SERVICIO DE BASE DE DATOS POSTGRESQL (reemplaza a mysql)
  # ------------------------------------------------------------------
  postgres-db:
    image: postgres:15 # Usamos una imagen oficial de PostgreSQL. La versión 15 es estable.
    container_name: postgres-db-local
    restart: always # Opcional: reinicia el contenedor si se cae.
    environment:
      # Las variables de entorno para Postgres son diferentes.
      POSTGRES_USER: ${DB_USER}       # Lee el usuario del archivo .env
      POSTGRES_PASSWORD: ${DB_PASSWORD} # Lee la contraseña del archivo .env
      POSTGRES_DB: ${DB_DATABASE}     # Lee el nombre de la DB del archivo .env
    ports:
      - "5432:5432" # El puerto estándar de Postgres es 5432. Lo mapeamos a tu PC.
    volumes:
      - postgres-data:/var/lib/postgresql/data # Ruta donde Postgres guarda sus datos.
    networks:
      - backend

  # ------------------------------------------------------------------
  # SERVICIO PARA TU APLICACIÓN NODE.JS
  # ------------------------------------------------------------------
  app:
    build: .
    container_name: node-app-local
    environment:
      # Ya no necesitamos pasar las variables de DB por separado porque el código
      # de NestJS ahora usa la variable DATABASE_URL del archivo .env
      - NODE_ENV=development
    depends_on:
      - postgres-db # Ahora depende del servicio de postgres
    ports:
      - "3000:3000"
    env_file:
      - .env # ¡Muy importante! Carga todas las variables de tu archivo .env
    networks:
      - backend

# Definición de la red (no cambia)
networks:
  backend:
    driver: bridge

# Definición de los volúmenes (cambiamos el nombre para que sea claro)
volumes:
  postgres-data: